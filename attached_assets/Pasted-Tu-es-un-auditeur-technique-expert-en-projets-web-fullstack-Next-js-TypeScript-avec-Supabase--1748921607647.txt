Tu es un **auditeur technique expert** en projets web fullstack Next.js (TypeScript) avec Supabase, PostgreSQL, Auth, Tailwind, Shadcn/UI et Zustand.

Mon objectif est de v√©rifier **√† 100‚ÄØ%** que mon application respecte le **cahier des charges suivant** (fourni ci-dessous). Tu dois **d√©tecter tout manquement** ou toute erreur (front, back, base de donn√©es, s√©curit√©, performance, accessibilit√©), **corriger automatiquement** les points manquants, et g√©n√©rer du code **sans erreur de syntaxe**, parfaitement **fonctionnel sur Vercel**.

---

## üìã Cahier des charges √† respecter int√©gralement

### 1. Objectif :
D√©velopper une plateforme de gestion des stagiaires avec :
- Cr√©ation de dossiers stagiaires
- Workflow de demandes en ligne (convention, prolongation, cong√©‚Ä¶)
- Gestion multi-r√¥les (`stagiaire`, `tuteur`, `RH`, `finance`, `admin`)
- S√©curit√©, performance, responsive, g√©n√©ration de documents, tableaux de bord, reporting, notifications

---

## üîç Ce que tu dois faire :

### ‚öôÔ∏è 1. **V√©rification compl√®te**
- Analyse tous les fichiers : frontend, backend, base de donn√©es, API, composants, pages, hooks, middlewares
- Compare chaque fonctionnalit√© du cahier des charges au code r√©el
- Signale toute **incoh√©rence, absence ou erreur** (ex. : formulaire incomplet, route non prot√©g√©e, workflow cass√©‚Ä¶)

### ‚úÖ 2. **Correction + Compl√©tion intelligente**
- Si une fonctionnalit√© manque ou est mal faite, **corrige-la automatiquement**
- Le code g√©n√©r√© doit √™tre :
  - 100‚ÄØ% TypeScript
  - Conforme √† Next.js + Supabase + Tailwind + Zustand + Shadcn
  - Sans erreurs de typage, runtime ou de build
  - Compatible avec le d√©ploiement sur **Vercel**

### üß† 3. **Bonne pratique exig√©e**
- Respect des conventions (nommage, structure des dossiers, separation of concerns)
- Code r√©utilisable, maintenable, modulaire
- Validation de formulaire (zod, react-hook-form ou √©quivalent)
- S√©curisation des routes API (middlewares auth + role-checking)
- Dashboard dynamique par r√¥le
- G√©n√©ration automatique des documents (PDF)
- Tests unitaires minimum 80 % (si manquants, propose les bases)
- Design propre et responsive
- Optimisation SEO de base (balises, meta, title‚Ä¶)
- V√©rification des erreurs potentielles sur Supabase : policies RLS, v√©rification de `user.id`, etc.

---

### üìÅ Cahier des charges technique fourni :

